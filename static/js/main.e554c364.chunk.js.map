{"version":3,"sources":["components/PageNavLink.tsx","components/NavBar.tsx","components/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","_ref","to","text","_jsx","NavLink","className","_ref2","isActive","classNames","children","NavBar","role","_jsxs","PeopleTable","peopleList","selectedPerson","isNoPeople","isSelected","person","slug","getSlug","name","findPerson","find","_Fragment","length","map","Link","concat","sex","born","died","motherName","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeopleList","_useState3","_useState4","isPeopleLoadError","setIsPeopleLoadError","_useState5","_useState6","setIsNoPeople","_useParams$slug","useParams","getPeopleList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","loadPeopleList","wrap","_context","prev","next","sent","t0","finish","stop","apply","arguments","useEffect","App","Routes","Route","path","index","element","Navigate","replace","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.e554c364.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"people\" text=\"People\" />\n          {/* <a className=\"navbar-item\" href=\"#/\">\n            Home\n          </a>\n\n          <a\n            className=\"navbar-item has-background-grey-lighter\"\n            href=\"#/people\"\n          >\n            People\n          </a> */}\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  peopleList: Person[],\n  selectedPerson: string | null,\n  isNoPeople: boolean,\n};\n\nexport const PeopleTable: React.FC<Props> = (\n  { peopleList, selectedPerson, isNoPeople },\n) => {\n  const isSelected = (person: Person) => person.slug === selectedPerson;\n\n  const getSlug = (name: string | null) => {\n    const findPerson = peopleList.find(person => person.name === name);\n\n    return findPerson?.slug;\n  };\n\n  return (\n    <>\n      {peopleList.length > 0 && (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table\n            is-striped\n            is-hoverable\n            is-narrow\n            is-fullwidth\n          \"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {peopleList.map(person => (\n              <tr\n                data-cy=\"person\"\n                key={person.born}\n                className={classNames({\n                  'has-background-warning': isSelected(person),\n                })}\n              >\n                <td>\n                  <Link\n                    to={`/people/${person.slug}`}\n                    className={classNames({\n                      'has-text-danger': person.sex === 'f',\n                    })}\n                  >\n                    {person.name}\n                  </Link>\n                </td>\n\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n\n                <td>\n                  {!person.motherName && <p>-</p>}\n\n                  {getSlug(person.motherName) ? (\n                    <Link\n                      to={`/people/${getSlug(person.motherName)}`}\n                      className=\"has-text-danger\"\n                    >\n                      {person.motherName}\n                    </Link>\n                  ) : (\n                    <p>{person.motherName}</p>\n                  )}\n                </td>\n\n                <td>\n                  {!person.fatherName && <p>-</p>}\n\n                  {getSlug(person.fatherName) ? (\n                    <Link to={`/people/${getSlug(person.fatherName)}`}>\n                      {person.fatherName}\n                    </Link>\n                  ) : (\n                    <p>{person.fatherName}</p>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n\n      {!isNoPeople && !peopleList.length && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\n\nexport const PeoplePage = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isPeopleLoadError, setIsPeopleLoadError] = useState(false);\n  const [isNoPeople, setIsNoPeople] = useState(false);\n  const { slug = null } = useParams();\n\n  const getPeopleList = async () => {\n    setIsNoPeople(true);\n\n    try {\n      const loadPeopleList = await getPeople();\n\n      setPeopleList(loadPeopleList);\n    } catch {\n      setIsPeopleLoadError(true);\n    } finally {\n      setIsNoPeople(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleList();\n  }, []);\n\n  return (\n    <>\n      <div className=\"block\">\n        <h1 className=\"title\">People Page</h1>\n\n        {!isPeopleLoadError && (\n          <div className=\"box table-container\">\n            {isNoPeople && <Loader />}\n\n            <PeopleTable\n              peopleList={peopleList}\n              selectedPerson={slug}\n              isNoPeople={isNoPeople}\n            />\n          </div>\n        )}\n\n        {isPeopleLoadError && !isNoPeople && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n      </div>\n    </>\n  );\n};\n","import { Routes, Navigate, Route } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}